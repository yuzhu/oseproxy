syntax = "proto3";
import "google/protobuf/any.proto";
import "google/protobuf/descriptor.proto";

option java_multiple_files = true;
option java_package = "ucb.oseproxy.rpc";
option java_outer_classname = "OSEProxyProto";
option objc_class_prefix = "HLW";

package rpc;

// The greeting service definition.
service OSEProxy {
  // get a DB connection
  rpc getConn (ConnRequest) returns (ConnReply) {}
  rpc execQuery (QueryRequest) returns (QueryReply) {}
  rpc resultSetLoad (RSRequest) returns (RSReply) {}
  rpc readRow(RowRequest) returns (RowReply) {}
  rpc execSMO(SMORequest) returns (SMOReply) {}
  rpc execUpdate(UpdateRequest) returns (UpdateReply) {}
  rpc execSMOString(SMOStringRequest) returns (SMOReply) {}
  rpc commitStack(StackRequest) returns (OKReply){}
  rpc rollbackStack(StackRequest) returns (OKReply){}
}


// The request message containing the user's name.
message ConnRequest {
  string host = 1;
  int32 port = 2;
  string dbname = 3;
  string username = 4;
  string password = 5;
  string clientID = 100;
}

message StackRequest {
  string connId = 1;  
}

message OKReply {
  bool status = 1;
}

// The response message containing the greetings
message ConnReply {
  string connId = 1;
  string status = 2;
}

message QueryRequest {
  string connId = 1;
  string query = 2;
}

message QueryReply {
  string resultSetId = 1;
  google.protobuf.DescriptorProto schema = 2;
}

message UpdateRequest {
  string connId = 1;
  string query = 2;
}

message UpdateReply {
  int32 rowCount = 1;
}

message RSRequest {
	string resultSetId = 1;
	int32 numRows = 2;
}

message RSReply {
	repeated google.protobuf.Any row = 1;
}

message RowRequest {
	string resultSetId = 1;
}
message RowReply {
	bool valid = 1;
	google.protobuf.Any  row = 2;
}

message SMORequest {
	string connId = 1;
	int32 cmd = 2;
	repeated string arg = 3;
}

message SMOReply {
	int32 status = 1;
	string smoId = 2;
}

message SMOStringRequest {
	string connId = 1;
	string smoCmd = 2;
}